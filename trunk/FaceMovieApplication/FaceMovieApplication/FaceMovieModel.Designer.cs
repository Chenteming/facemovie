//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("FaceMovieModel", "UserUserMovie", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(FaceMovieApplication.User), "UserMovie", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(FaceMovieApplication.UserMovie))]
[assembly: EdmRelationshipAttribute("FaceMovieModel", "MovieUserMovie", "Movie", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(FaceMovieApplication.Movie), "UserMovie", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(FaceMovieApplication.UserMovie))]
[assembly: EdmRelationshipAttribute("FaceMovieModel", "MovieSimilarityMovie", "MovieSimilarity", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(FaceMovieApplication.MovieSimilarity), "Movie", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(FaceMovieApplication.Movie))]
[assembly: EdmRelationshipAttribute("FaceMovieModel", "MovieSimilarityMovie1", "MovieSimilarity", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(FaceMovieApplication.MovieSimilarity), "Movie", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(FaceMovieApplication.Movie))]

#endregion

namespace FaceMovieApplication
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class FaceMovieModelContainer : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new FaceMovieModelContainer object using the connection string found in the 'FaceMovieModelContainer' section of the application configuration file.
        /// </summary>
        public FaceMovieModelContainer() : base("name=FaceMovieModelContainer", "FaceMovieModelContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new FaceMovieModelContainer object.
        /// </summary>
        public FaceMovieModelContainer(string connectionString) : base(connectionString, "FaceMovieModelContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new FaceMovieModelContainer object.
        /// </summary>
        public FaceMovieModelContainer(EntityConnection connection) : base(connection, "FaceMovieModelContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<User> UserSet
        {
            get
            {
                if ((_UserSet == null))
                {
                    _UserSet = base.CreateObjectSet<User>("UserSet");
                }
                return _UserSet;
            }
        }
        private ObjectSet<User> _UserSet;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Movie> MovieSet
        {
            get
            {
                if ((_MovieSet == null))
                {
                    _MovieSet = base.CreateObjectSet<Movie>("MovieSet");
                }
                return _MovieSet;
            }
        }
        private ObjectSet<Movie> _MovieSet;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<UserMovie> UserMovieSet
        {
            get
            {
                if ((_UserMovieSet == null))
                {
                    _UserMovieSet = base.CreateObjectSet<UserMovie>("UserMovieSet");
                }
                return _UserMovieSet;
            }
        }
        private ObjectSet<UserMovie> _UserMovieSet;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MovieSimilarity> MovieSimilaritySet
        {
            get
            {
                if ((_MovieSimilaritySet == null))
                {
                    _MovieSimilaritySet = base.CreateObjectSet<MovieSimilarity>("MovieSimilaritySet");
                }
                return _MovieSimilaritySet;
            }
        }
        private ObjectSet<MovieSimilarity> _MovieSimilaritySet;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Parameter> Parameters
        {
            get
            {
                if ((_Parameters == null))
                {
                    _Parameters = base.CreateObjectSet<Parameter>("Parameters");
                }
                return _Parameters;
            }
        }
        private ObjectSet<Parameter> _Parameters;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the UserSet EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUserSet(User user)
        {
            base.AddObject("UserSet", user);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MovieSet EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMovieSet(Movie movie)
        {
            base.AddObject("MovieSet", movie);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the UserMovieSet EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUserMovieSet(UserMovie userMovie)
        {
            base.AddObject("UserMovieSet", userMovie);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MovieSimilaritySet EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMovieSimilaritySet(MovieSimilarity movieSimilarity)
        {
            base.AddObject("MovieSimilaritySet", movieSimilarity);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Parameters EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToParameters(Parameter parameter)
        {
            base.AddObject("Parameters", parameter);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FaceMovieModel", Name="Movie")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Movie : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Movie object.
        /// </summary>
        /// <param name="movieId">Initial value of the MovieId property.</param>
        /// <param name="movieFacebookPageId">Initial value of the MovieFacebookPageId property.</param>
        /// <param name="movieName">Initial value of the MovieName property.</param>
        public static Movie CreateMovie(global::System.Int32 movieId, global::System.Int64 movieFacebookPageId, global::System.String movieName)
        {
            Movie movie = new Movie();
            movie.MovieId = movieId;
            movie.MovieFacebookPageId = movieFacebookPageId;
            movie.MovieName = movieName;
            return movie;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MovieId
        {
            get
            {
                return _MovieId;
            }
            set
            {
                if (_MovieId != value)
                {
                    OnMovieIdChanging(value);
                    ReportPropertyChanging("MovieId");
                    _MovieId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("MovieId");
                    OnMovieIdChanged();
                }
            }
        }
        private global::System.Int32 _MovieId;
        partial void OnMovieIdChanging(global::System.Int32 value);
        partial void OnMovieIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 MovieFacebookPageId
        {
            get
            {
                return _MovieFacebookPageId;
            }
            set
            {
                OnMovieFacebookPageIdChanging(value);
                ReportPropertyChanging("MovieFacebookPageId");
                _MovieFacebookPageId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MovieFacebookPageId");
                OnMovieFacebookPageIdChanged();
            }
        }
        private global::System.Int64 _MovieFacebookPageId;
        partial void OnMovieFacebookPageIdChanging(global::System.Int64 value);
        partial void OnMovieFacebookPageIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MovieName
        {
            get
            {
                return _MovieName;
            }
            set
            {
                OnMovieNameChanging(value);
                ReportPropertyChanging("MovieName");
                _MovieName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("MovieName");
                OnMovieNameChanged();
            }
        }
        private global::System.String _MovieName;
        partial void OnMovieNameChanging(global::System.String value);
        partial void OnMovieNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FaceMovieModel", "MovieUserMovie", "UserMovie")]
        public EntityCollection<UserMovie> UserMovie
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UserMovie>("FaceMovieModel.MovieUserMovie", "UserMovie");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UserMovie>("FaceMovieModel.MovieUserMovie", "UserMovie", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FaceMovieModel", "MovieSimilarityMovie1", "MovieSimilarity")]
        public EntityCollection<MovieSimilarity> MovieSimilarity
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MovieSimilarity>("FaceMovieModel.MovieSimilarityMovie1", "MovieSimilarity");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MovieSimilarity>("FaceMovieModel.MovieSimilarityMovie1", "MovieSimilarity", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FaceMovieModel", Name="MovieSimilarity")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MovieSimilarity : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MovieSimilarity object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="similarity">Initial value of the Similarity property.</param>
        public static MovieSimilarity CreateMovieSimilarity(global::System.Int32 id, global::System.Double similarity)
        {
            MovieSimilarity movieSimilarity = new MovieSimilarity();
            movieSimilarity.Id = id;
            movieSimilarity.Similarity = similarity;
            return movieSimilarity;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Similarity
        {
            get
            {
                return _Similarity;
            }
            set
            {
                OnSimilarityChanging(value);
                ReportPropertyChanging("Similarity");
                _Similarity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Similarity");
                OnSimilarityChanged();
            }
        }
        private global::System.Double _Similarity;
        partial void OnSimilarityChanging(global::System.Double value);
        partial void OnSimilarityChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FaceMovieModel", "MovieSimilarityMovie", "Movie")]
        public Movie Movie_1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Movie>("FaceMovieModel.MovieSimilarityMovie", "Movie").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Movie>("FaceMovieModel.MovieSimilarityMovie", "Movie").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Movie> Movie_1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Movie>("FaceMovieModel.MovieSimilarityMovie", "Movie");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Movie>("FaceMovieModel.MovieSimilarityMovie", "Movie", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FaceMovieModel", "MovieSimilarityMovie1", "Movie")]
        public Movie Movie_2
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Movie>("FaceMovieModel.MovieSimilarityMovie1", "Movie").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Movie>("FaceMovieModel.MovieSimilarityMovie1", "Movie").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Movie> Movie_2Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Movie>("FaceMovieModel.MovieSimilarityMovie1", "Movie");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Movie>("FaceMovieModel.MovieSimilarityMovie1", "Movie", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FaceMovieModel", Name="Parameter")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Parameter : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Parameter object.
        /// </summary>
        /// <param name="parameterId">Initial value of the ParameterId property.</param>
        /// <param name="parameterName">Initial value of the ParameterName property.</param>
        /// <param name="parameterValue">Initial value of the ParameterValue property.</param>
        public static Parameter CreateParameter(global::System.Int32 parameterId, global::System.String parameterName, global::System.String parameterValue)
        {
            Parameter parameter = new Parameter();
            parameter.ParameterId = parameterId;
            parameter.ParameterName = parameterName;
            parameter.ParameterValue = parameterValue;
            return parameter;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ParameterId
        {
            get
            {
                return _ParameterId;
            }
            set
            {
                if (_ParameterId != value)
                {
                    OnParameterIdChanging(value);
                    ReportPropertyChanging("ParameterId");
                    _ParameterId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ParameterId");
                    OnParameterIdChanged();
                }
            }
        }
        private global::System.Int32 _ParameterId;
        partial void OnParameterIdChanging(global::System.Int32 value);
        partial void OnParameterIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ParameterName
        {
            get
            {
                return _ParameterName;
            }
            set
            {
                OnParameterNameChanging(value);
                ReportPropertyChanging("ParameterName");
                _ParameterName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ParameterName");
                OnParameterNameChanged();
            }
        }
        private global::System.String _ParameterName;
        partial void OnParameterNameChanging(global::System.String value);
        partial void OnParameterNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ParameterValue
        {
            get
            {
                return _ParameterValue;
            }
            set
            {
                OnParameterValueChanging(value);
                ReportPropertyChanging("ParameterValue");
                _ParameterValue = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ParameterValue");
                OnParameterValueChanged();
            }
        }
        private global::System.String _ParameterValue;
        partial void OnParameterValueChanging(global::System.String value);
        partial void OnParameterValueChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FaceMovieModel", Name="User")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class User : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new User object.
        /// </summary>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="userFacebookId">Initial value of the UserFacebookId property.</param>
        /// <param name="userFirstName">Initial value of the UserFirstName property.</param>
        public static User CreateUser(global::System.Int32 userId, global::System.Int64 userFacebookId, global::System.String userFirstName)
        {
            User user = new User();
            user.UserId = userId;
            user.UserFacebookId = userFacebookId;
            user.UserFirstName = userFirstName;
            return user;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                if (_UserId != value)
                {
                    OnUserIdChanging(value);
                    ReportPropertyChanging("UserId");
                    _UserId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UserId");
                    OnUserIdChanged();
                }
            }
        }
        private global::System.Int32 _UserId;
        partial void OnUserIdChanging(global::System.Int32 value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UserFacebookToken
        {
            get
            {
                return _UserFacebookToken;
            }
            set
            {
                OnUserFacebookTokenChanging(value);
                ReportPropertyChanging("UserFacebookToken");
                _UserFacebookToken = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("UserFacebookToken");
                OnUserFacebookTokenChanged();
            }
        }
        private global::System.String _UserFacebookToken;
        partial void OnUserFacebookTokenChanging(global::System.String value);
        partial void OnUserFacebookTokenChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 UserFacebookId
        {
            get
            {
                return _UserFacebookId;
            }
            set
            {
                OnUserFacebookIdChanging(value);
                ReportPropertyChanging("UserFacebookId");
                _UserFacebookId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserFacebookId");
                OnUserFacebookIdChanged();
            }
        }
        private global::System.Int64 _UserFacebookId;
        partial void OnUserFacebookIdChanging(global::System.Int64 value);
        partial void OnUserFacebookIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserFirstName
        {
            get
            {
                return _UserFirstName;
            }
            set
            {
                OnUserFirstNameChanging(value);
                ReportPropertyChanging("UserFirstName");
                _UserFirstName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("UserFirstName");
                OnUserFirstNameChanged();
            }
        }
        private global::System.String _UserFirstName;
        partial void OnUserFirstNameChanging(global::System.String value);
        partial void OnUserFirstNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UserLastName
        {
            get
            {
                return _UserLastName;
            }
            set
            {
                OnUserLastNameChanging(value);
                ReportPropertyChanging("UserLastName");
                _UserLastName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("UserLastName");
                OnUserLastNameChanged();
            }
        }
        private global::System.String _UserLastName;
        partial void OnUserLastNameChanging(global::System.String value);
        partial void OnUserLastNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UserPictureLink
        {
            get
            {
                return _UserPictureLink;
            }
            set
            {
                OnUserPictureLinkChanging(value);
                ReportPropertyChanging("UserPictureLink");
                _UserPictureLink = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("UserPictureLink");
                OnUserPictureLinkChanged();
            }
        }
        private global::System.String _UserPictureLink;
        partial void OnUserPictureLinkChanging(global::System.String value);
        partial void OnUserPictureLinkChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FaceMovieModel", "UserUserMovie", "UserMovie")]
        public EntityCollection<UserMovie> UserMovie
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UserMovie>("FaceMovieModel.UserUserMovie", "UserMovie");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UserMovie>("FaceMovieModel.UserUserMovie", "UserMovie", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FaceMovieModel", Name="UserMovie")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UserMovie : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new UserMovie object.
        /// </summary>
        /// <param name="userMovieId">Initial value of the UserMovieId property.</param>
        /// <param name="userMovieRanking">Initial value of the UserMovieRanking property.</param>
        public static UserMovie CreateUserMovie(global::System.Int32 userMovieId, global::System.Double userMovieRanking)
        {
            UserMovie userMovie = new UserMovie();
            userMovie.UserMovieId = userMovieId;
            userMovie.UserMovieRanking = userMovieRanking;
            return userMovie;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserMovieId
        {
            get
            {
                return _UserMovieId;
            }
            set
            {
                if (_UserMovieId != value)
                {
                    OnUserMovieIdChanging(value);
                    ReportPropertyChanging("UserMovieId");
                    _UserMovieId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UserMovieId");
                    OnUserMovieIdChanged();
                }
            }
        }
        private global::System.Int32 _UserMovieId;
        partial void OnUserMovieIdChanging(global::System.Int32 value);
        partial void OnUserMovieIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double UserMovieRanking
        {
            get
            {
                return _UserMovieRanking;
            }
            set
            {
                OnUserMovieRankingChanging(value);
                ReportPropertyChanging("UserMovieRanking");
                _UserMovieRanking = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserMovieRanking");
                OnUserMovieRankingChanged();
            }
        }
        private global::System.Double _UserMovieRanking;
        partial void OnUserMovieRankingChanging(global::System.Double value);
        partial void OnUserMovieRankingChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FaceMovieModel", "UserUserMovie", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("FaceMovieModel.UserUserMovie", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("FaceMovieModel.UserUserMovie", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("FaceMovieModel.UserUserMovie", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("FaceMovieModel.UserUserMovie", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FaceMovieModel", "MovieUserMovie", "Movie")]
        public Movie Movie
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Movie>("FaceMovieModel.MovieUserMovie", "Movie").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Movie>("FaceMovieModel.MovieUserMovie", "Movie").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Movie> MovieReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Movie>("FaceMovieModel.MovieUserMovie", "Movie");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Movie>("FaceMovieModel.MovieUserMovie", "Movie", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
